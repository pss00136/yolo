/* 모임 이미지 */
CREATE TABLE CLUBIMAGE (
	CIMG_NUM VARCHAR2(100) NOT NULL, /* 이미지 번호 */
	C_NUM VARCHAR2(100) NOT NULL, /* 모임 번호 */
	CIMG_PATH VARCHAR2(255), /* 이미지 위치 */
	CIMG_NAME VARCHAR2(100) /* 이미지 이름 */
);

ALTER TABLE CLUBIMAGE
	ADD
		CONSTRAINT PK_CLUBIMAGE
		PRIMARY KEY (
			CIMG_NUM
		);

/* 회원정보 */
CREATE TABLE USERINFO (
	U_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	U_PASS VARCHAR2(20) NOT NULL, /* 패스워드 */
	U_NAME VARCHAR2(50) NOT NULL, /* 이름 */
	U_TEL VARCHAR2(30) NOT NULL, /* 전화번호 */
	U_EMAIL VARCHAR2(40), /* 이메일 */
	U_BIRTH VARCHAR2(30) NOT NULL, /* 생년월일 */
	U_ADDR VARCHAR2(255) NOT NULL, /* 주소 */
	U_IPATH VARCHAR2(255), /* 회원 이미지 위치 */
	U_INAME VARCHAR2(100) /* 회원 이미지 이름 */
);

ALTER TABLE USERINFO
	ADD
		CONSTRAINT PK_USERINFO
		PRIMARY KEY (
			U_ID
		);

/* 관심 목록 */
CREATE TABLE BOOKMARK (
	BM_NUM VARCHAR2(100) NOT NULL, /* 관심 번호 */
	BM_TYPE VARCHAR2(100), /* 관심 타입 */
	BM_SELNUM VARCHAR2(100), /* 희망번호 */
	U_ID VARCHAR2(20) NOT NULL /* 아이디 */
);

ALTER TABLE BOOKMARK
	ADD
		CONSTRAINT PK_BOOKMARK
		PRIMARY KEY (
			BM_NUM
		);

/* 공간 예약 */
CREATE TABLE BOOKLOT (
	BL_ID VARCHAR2(100) NOT NULL, /* 예약 번호 */
	U_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	PRI_NUM VARCHAR2(100) NOT NULL, /* 민간시설 공간 번호 */
	BL_NAME VARCHAR2(50), /* 예약자 이름 */
	BL_TEL VARCHAR2(30), /* 예약자 전화번호 */
	BL_PEOPLE INTEGER, /* 인원 */
	BL_DATE VARCHAR2(50), /* 예약 날짜 */
	BL_TIME VARCHAR2(150), /* 예약 시간 */
	BL_PAY INTEGER /* 결제 가격 */
);

ALTER TABLE BOOKLOT
	ADD
		CONSTRAINT PK_BOOKLOT
		PRIMARY KEY (
			BL_ID
		);

/* 사업자 관리 */
CREATE TABLE ENTREPRENEUR (
	E_NUM VARCHAR2(100) NOT NULL, /* 사업자 번호 */
	PRI_NUM VARCHAR2(100) NOT NULL, /* 민간시설 공간 번호 */
	E_TYPE VARCHAR2(20) DELAULT '사업자' NOT NULL, /* 사업자 분류 */
	E_TITLE VARCHAR2(50) NOT NULL, /* 사업자 상호명 */
	E_ADDR VARCHAR2(255) NOT NULL, /* 사업장 주소 */
	E_RNUM VARCHAR2(50) NOT NULL, /* 사업자 등록번호 */
	E_FNAME VARCHAR2(50), /* 사업자 등록증 파일이름 */
	E_FPATH VARCHAR2(255) /* 사업자 등록증 파일위치 */
);

ALTER TABLE ENTREPRENEUR
	ADD
		CONSTRAINT PK_ENTREPRENEUR
		PRIMARY KEY (
			E_NUM
		);

/* 회원 채팅 */
CREATE TABLE CHAT (
	C_NUM VARCHAR2(100) NOT NULL, /* 채팅 번호 */
	U_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	C_TITLE VARCHAR2(100), /* 보내는사람 */
	C_TYPE VARCHAR2(50) /* 쪽지구분 */
);

ALTER TABLE CHAT
	ADD
		CONSTRAINT PK_CHAT
		PRIMARY KEY (
			C_NUM
		);

/* 민간시설 공간 이미지 */
CREATE TABLE PRIVATEIMAGE (
	PRIIMG_NUM VARCHAR2(100) NOT NULL, /* 이미지 번호 */
	PRI_NUM VARCHAR2(100) NOT NULL, /* 민간시설 공간 번호 */
	PRIIMG_PATH VARCHAR2(255), /* 이미지 위치 */
	PRIIMG_NAME VARCHAR2(100) /* 이미지 이름 */
);

ALTER TABLE PRIVATEIMAGE
	ADD
		CONSTRAINT PK_PRIVATEIMAGE
		PRIMARY KEY (
			PRIIMG_NUM
		);

/* 호스트 */
CREATE TABLE HOSTINFO (
	H_NUM VARCHAR2(100) NOT NULL, /* 호스트번호 */
	U_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	H_NAME VARCHAR2(50), /* 호스트 이름 */
	H_CONTENT VARCHAR2(255) /* 호스트 소개 */
);

ALTER TABLE HOSTINFO
	ADD
		CONSTRAINT PK_HOSTINFO
		PRIMARY KEY (
			H_NUM
		);

/* 도움말 */
CREATE TABLE ADVICE (
	A_NUM VARCHAR2(100) NOT NULL, /* 도움말 번호 */
	A_TYPE VARCHAR2(100), /* 도움말 타입 */
	A_TITLE VARCHAR2(100), /* 도움말 제목 */
	A_CONTENT VARCHAR2(500), /* 도움말 내용 */
	A_DATE VARCHAR2(50) /* 도움말 등록날짜 */
);

ALTER TABLE ADVICE
	ADD
		CONSTRAINT PK_ADVICE
		PRIMARY KEY (
			A_NUM
		);

/* 모임 가입 */
CREATE TABLE SIGNCLUB (
	SC_NUM VARCHAR2(100) NOT NULL, /* 신청 번호 */
	C_NUM VARCHAR2(100) NOT NULL, /* 모임 번호 */
	U_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	SC_DATE VARCHAR2(50) NOT NULL /* 신청 날짜 */
);

ALTER TABLE SIGNCLUB
	ADD
		CONSTRAINT PK_SIGNCLUB
		PRIMARY KEY (
			SC_NUM
		);

/* 타임테이블 */
CREATE TABLE TIMETABLE (
	T_NUM VARCHAR2(100) NOT NULL, /* 예약한번호 */
	PRI_NUM VARCHAR2(100) NOT NULL, /* 민간시설 공간 번호 */
	T_DATE VARCHAR2(50), /* 예약날짜 */
	T_TIME VARCHAR2(200) /* 예약시간 */
);

ALTER TABLE TIMETABLE
	ADD
		CONSTRAINT PK_TIMETABLE
		PRIMARY KEY (
			T_NUM
		);

/* 민간시설 공간 */
CREATE TABLE PRIVATELOT (
	PRI_NUM VARCHAR2(100) NOT NULL, /* 민간시설 공간 번호 */
	H_NUM VARCHAR2(100) NOT NULL, /* 호스트번호 */
	PRI_KIND VARCHAR2(50) NOT NULL DEFAULT '민간시설', /* 공간 종류 */
	PRI_TYPE VARCHAR2(150) NOT NULL DEFAULT '회의실', /* 공간 유형 */
	PRI_CHARGE VARCHAR2(5) NOT NULL ckeck(PRI_CHARGE in('유료','무료'), /* 유료사용여부 */
	PRI_BOOKTYPE VARCHAR2(20) NOT NULL CKECK(PRI_BOOKTYPE IN('시간','일','월')), /* 예약 유형 */
	PRI_TITLE VARCHAR2(100) NOT NULL, /* 공간명 */
	PRI_ADDR VARCHAR2(255) NOT NULL, /* 공간 주소 */
	PRI_TAG VARCHAR2(200), /* 태그 */
	PRI_CONTENT VARCHAR2(255), /* 공간 소개 */
	PRI_HOLIDAY VARCHAR2(50), /* 휴무일 */
	PRI_BOOKWAY VARCHAR2(50), /* 공간 예약 방법 */
	PRI_INFO VARCHAR2(100), /* 공간 정보 */
	PRI_ACCOUNT VARCHAR2(100), /* 계좌정보 */
	PRI_WEEKPRICE INTEGER, /* 주중 가격 */
	PRI_WEEKENDPRICE INTEGER, /* 주말 /휴일 가격 */
	PRI_FACILITY VARCHAR2(255), /* 편의시설 */
	PRI_MINPEOPLE INTEGER NOT NULL DEFAULT 1, /* 최소 인원 */
	PRI_MAXPEOPLE INTEGER, /* 최대 인원 */
	PRI_WEEKDAYO VARCHAR2(10), /* 평일운영시간 */
	PRI_WEEKDAYE VARCHAR2(10), /* 평일종료시간 */
	PRI_WEEKENDO VARCHAR2(10), /* 주말운영시간 */
	PRI_WEEKENDE VARCHAR2(10), /* 주말종료시간 */
	PRI_LAT VARCHAR2(20), /* 위도 */
	PIR_LONG VARCHAR2(20), /* 경도 */
	PRI_TEL VARCHAR2(30), /* 전화번호 */
	PRI_WEB VARCHAR2(50), /* 홈페이지 */
	PRI_BOOKCOUNT INTEGER, /* 예약수 */
	PRI_HITS INTEGER NOT NULL DEFAULT 0, /* 조회수 */
	PRI_BOOKMARK INTEGER NOT NULL DEFAULT 0, /* 관심지수 */
	PRI_REGDATE VARCHAR2(100) NOT NULL, /* 등록일 */
	PRI_CONFIRM VARCHAR2(5) DEFAULT 'W' NOT NULL /* 관리자승인여부 */
);

ALTER TABLE PRIVATELOT
	ADD
		CONSTRAINT PK_PRIVATELOT
		PRIMARY KEY (
			PRI_NUM
		);

/* 공간 공유 등록 */
CREATE TABLE SHARELOT (
	SL_NUM VARCHAR2(100) NOT NULL, /* 공유 번호 */
	BL_ID VARCHAR2(100) NOT NULL, /* 예약 번호 */
	SL_TITLE VARCHAR2(100) NOT NULL, /* 공유 제목 */
	SL_CONTENT VARCHAR2(500), /* 공유 내용 */
	SL_TIME VARCHAR2(40) NOT NULL, /* 공유 시간 */
	SL_PRICE INTEGER NOT NULL, /* 공유 가격 */
	SL_REGDATE VARCHAR2(100) NOT NULL, /* 등록일 */
	SL_HITS INTEGER DEFAULT '0' NOT NULL, /* 조회수 */
	SL_PEOPLE INTEGER DEFAULT '1' NOT NULL/* 제한 인원수 */
);

ALTER TABLE SHARELOT
	ADD
		CONSTRAINT PK_SHARELOT
		PRIMARY KEY (
			SL_NUM
		);

/* 모임 등록 */
CREATE TABLE CLUB (
	C_NUM VARCHAR2(100) NOT NULL, /* 모임 번호 */
	U_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	C_TYPE VARCHAR2(100) NOT NULL, /* 모임 유형 */
	C_TITLE VARCHAR2(100) NOT NULL, /* 모임명 */
	C_TAG VARCHAR2(200), /* 해시태그 */
	C_PEOPLE INTEGER, /* 인원 */
	C_RECRUIT VARCHAR2(80) NOT NULL, /* 모집기간 */
	C_PERIOD VARCHAR2(50) NOT NULL, /* 활동주기 */
	C_DATE VARCHAR2(200) NOT NULL, /* 일시 */
	C_PLACE VARCHAR2(200) NOT NULL, /* 개최 장소 */
	C_CONTENT VARCHAR2(255), /* 설명 */
	C_CONFIRM VARCHAR2(5) NOT NULL, /* 승인 여부 */
	C_REGDATE VARCHAR2(100) NOT NULL, /* 등록일 */
	C_HITS INTEGER NOT NULL, /* 조회수 */
	C_BOOKMARK INTEGER, /* 관심지수 */
	C_ENTRY INTEGER NOT NULL /* 참여인원 */
);

ALTER TABLE CLUB
	ADD
		CONSTRAINT PK_CLUB
		PRIMARY KEY (
			C_NUM
		);

/* 공간후기 */
CREATE TABLE POSTSCRIPT (
	PS_NUM VARCHAR2(100) NOT NULL, /* 후기번호 */
	PRI_NUM VARCHAR2(100) NOT NULL, /* 민간시설 공간 번호 */
	U_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	PS_CONTENT VARCHAR2(500), /* 후기내용 */
	PS_REGDATE VARCHAR2(100), /* 등록일 */
	PS_STAR INTEGER /* 별점 */
);

ALTER TABLE POSTSCRIPT
	ADD
		CONSTRAINT PK_POSTSCRIPT
		PRIMARY KEY (
			PS_NUM
		);

/* 공간공유예약 */
CREATE TABLE BOOKSHARELOT (
	BSL_NUM VARCHAR2(100) NOT NULL, /* 공간공유예약 번호 */
	SL_NUM VARCHAR2(100) NOT NULL, /* 공유 번호 */
	U_ID VARCHAR2(20) NOT NULL, /* 아이디 */
	BSL_DATE VARCHAR2(50) NOT NULL, /* 예약날짜 */
	BSL_TIME VARCHAR2(40) NOT NULL, /* 예약시간 */
	BSL_TITLE VARCHAR2(100) NOT NULL, /* 예약제목 */
	BSL_CONTENT VARCHAR2(500), /* 예약내용 */
	BSL_PEOPLE INTEGER, /* 인원 */
	BSL_CONFIRM VARCHAR2(5) DEFAULT 'N' NOT NULL /* 승인여부 */
);

ALTER TABLE BOOKSHARELOT
	ADD
		CONSTRAINT PK_BOOKSHARELOT
		PRIMARY KEY (
			BSL_NUM
		);

/* 공간공유 타임테이블 */
CREATE TABLE SHARETIMETABLE (
	T_NUM VARCHAR2(100) NOT NULL, /* 예약한번호 */
	SL_NUM VARCHAR2(100) NOT NULL, /* 공유 번호 */
	T_DATE VARCHAR2(50), /* 예약날짜 */
	T_TIME VARCHAR2(200) /* 예약시간 */
);

ALTER TABLE SHARETIMETABLE
	ADD
		CONSTRAINT PK_SHARETIMETABLE
		PRIMARY KEY (
			T_NUM
		);

ALTER TABLE CLUBIMAGE
	ADD
		CONSTRAINT FK_CLUB_TO_CLUBIMAGE
		FOREIGN KEY (
			C_NUM
		)
		REFERENCES CLUB (
			C_NUM
		);

ALTER TABLE BOOKMARK
	ADD
		CONSTRAINT FK_USERINFO_TO_BOOKMARK
		FOREIGN KEY (
			U_ID
		)
		REFERENCES USERINFO (
			U_ID
		);

ALTER TABLE BOOKLOT
	ADD
		CONSTRAINT FK_USERINFO_TO_BOOKLOT
		FOREIGN KEY (
			U_ID
		)
		REFERENCES USERINFO (
			U_ID
		);

ALTER TABLE BOOKLOT
	ADD
		CONSTRAINT FK_PRIVATELOT_TO_BOOKLOT
		FOREIGN KEY (
			PRI_NUM
		)
		REFERENCES PRIVATELOT (
			PRI_NUM
		);

ALTER TABLE ENTREPRENEUR
	ADD
		CONSTRAINT FK_PRIVATELOT_TO_ENTREPRENEUR
		FOREIGN KEY (
			PRI_NUM
		)
		REFERENCES PRIVATELOT (
			PRI_NUM
		);

ALTER TABLE CHAT
	ADD
		CONSTRAINT FK_USERINFO_TO_CHAT
		FOREIGN KEY (
			U_ID
		)
		REFERENCES USERINFO (
			U_ID
		);

ALTER TABLE PRIVATEIMAGE
	ADD
		CONSTRAINT FK_PRIVATELOT_TO_PRIVATEIMAGE
		FOREIGN KEY (
			PRI_NUM
		)
		REFERENCES PRIVATELOT (
			PRI_NUM
		);

ALTER TABLE HOSTINFO
	ADD
		CONSTRAINT FK_USERINFO_TO_HOSTINFO
		FOREIGN KEY (
			U_ID
		)
		REFERENCES USERINFO (
			U_ID
		);

ALTER TABLE SIGNCLUB
	ADD
		CONSTRAINT FK_USERINFO_TO_SIGNCLUB
		FOREIGN KEY (
			U_ID
		)
		REFERENCES USERINFO (
			U_ID
		);

ALTER TABLE SIGNCLUB
	ADD
		CONSTRAINT FK_CLUB_TO_SIGNCLUB
		FOREIGN KEY (
			C_NUM
		)
		REFERENCES CLUB (
			C_NUM
		);

ALTER TABLE TIMETABLE
	ADD
		CONSTRAINT FK_PRIVATELOT_TO_TIMETABLE
		FOREIGN KEY (
			PRI_NUM
		)
		REFERENCES PRIVATELOT (
			PRI_NUM
		);

ALTER TABLE PRIVATELOT
	ADD
		CONSTRAINT FK_HOSTINFO_TO_PRIVATELOT
		FOREIGN KEY (
			H_NUM
		)
		REFERENCES HOSTINFO (
			H_NUM
		);

ALTER TABLE SHARELOT
	ADD
		CONSTRAINT FK_BOOKLOT_TO_SHARELOT
		FOREIGN KEY (
			BL_ID
		)
		REFERENCES BOOKLOT (
			BL_ID
		);

ALTER TABLE CLUB
	ADD
		CONSTRAINT FK_USERINFO_TO_CLUB
		FOREIGN KEY (
			U_ID
		)
		REFERENCES USERINFO (
			U_ID
		);

ALTER TABLE POSTSCRIPT
	ADD
		CONSTRAINT FK_PRIVATELOT_TO_POSTSCRIPT
		FOREIGN KEY (
			PRI_NUM
		)
		REFERENCES PRIVATELOT (
			PRI_NUM
		);

ALTER TABLE POSTSCRIPT
	ADD
		CONSTRAINT FK_USERINFO_TO_POSTSCRIPT
		FOREIGN KEY (
			U_ID
		)
		REFERENCES USERINFO (
			U_ID
		);

ALTER TABLE BOOKSHARELOT
	ADD
		CONSTRAINT FK_SHARELOT_TO_BOOKSHARELOT
		FOREIGN KEY (
			SL_NUM
		)
		REFERENCES SHARELOT (
			SL_NUM
		);

ALTER TABLE BOOKSHARELOT
	ADD
		CONSTRAINT FK_USERINFO_TO_BOOKSHARELOT
		FOREIGN KEY (
			U_ID
		)
		REFERENCES USERINFO (
			U_ID
		);

ALTER TABLE SHARETIMETABLE
	ADD
		CONSTRAINT FK_SHARELOT_TO_SHARETIMETABLE
		FOREIGN KEY (
			SL_NUM
		)
		REFERENCES SHARELOT (
			SL_NUM
		);